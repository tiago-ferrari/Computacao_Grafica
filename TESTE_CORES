#include <stdio.h>
#include <stdlib.h>
#include <GL/glut.h>

void keyboard(unsigned char key, int x, int y);
void display(void);

float r, g, b = 0.0f;

void trocaCor(int tecla, int x, int y)
{
	switch (tecla)
	{
	case GLUT_KEY_F1:
		r = 1.0f;
		g = 0.0f;
		b = 0.0f;
		glutPostRedisplay();
		break;

	case GLUT_KEY_F2:
		r = 1.0f;
		g = 1.0f;
		b = 0.0f;
		glutPostRedisplay();
		break;

	case GLUT_KEY_F3:
		r = 0.0f;
		g = 0.0f;
		b = 1.0f;
		glutPostRedisplay();
		break;
	}

}

float  x, y;
bool check = false;

void mouse(int button, int state, int mousex, int mousey)
{
	if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)
	{
		check = true;

		x = mousex;
		y = 480 - mousey;

	}

	glutPostRedisplay();
}

int main(int argc, char** argv)
{
	printf("F1 - VERMELHO F2 - AMARELO F3- AZUL");
	glutInit(&argc, argv);
	glutInitWindowSize(600, 600);
	glutInitWindowPosition(10, 10);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutCreateWindow("MOUSE CORES");

	glClearColor(1, 1, 1, 0);
	glClear(GL_COLOR_BUFFER_BIT);

	glutDisplayFunc(display);
	glutMouseFunc(mouse);
	glutSpecialFunc(trocaCor);
	glutMainLoop();
}

void keyboard(unsigned char key, int x, int y)
{
	switch (key) {
	case '\x1B':
		exit(EXIT_SUCCESS);
		break;
	}
}

void display(void)
{
	glColor3f(r, g, b);
	glPointSize(50);

	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0, 600.0, 0.0, 600.0);

	if (check)
	{
		glBegin(GL_POINTS);
		glVertex2i(x, y);

		glEnd();
	}
	glFlush();
}
