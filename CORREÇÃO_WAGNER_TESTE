#include <stdio.h>
#include <stdlib.h>
#include <GL/glut.h>

#define janela_altura 400
#define janela_largura 600

float tx = 0.0;
float ty = 0.0;

float xStep = 4;
float yStep = 4;

void display(void);
void tela(GLsizei w, GLsizei h);
void keyboard(unsigned char tecla, int x, int y);
void anima(int valor);

int main(int argc, char** argv)
{
	glutInit(&argc, argv);

	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);

	glutInitWindowSize(janela_largura, janela_altura);
	glutInitWindowPosition(100, 100);
	glutCreateWindow("Animação - Davi Calais Souza");

	glutReshapeFunc(tela);
	glutDisplayFunc(display);
	glutKeyboardFunc(&keyboard);
	glutTimerFunc(150, anima, 1);
	glutMainLoop();

	return(0);
}

void anima(int valor)
{
	if ((tx) > (300) || (tx) < (-300)) {
		xStep = -xStep;
	}

	if ((ty) > (150) || (ty) < (-150)) {
		yStep = -yStep;
	}

	tx += xStep;
	ty += yStep;

	/*printf("\n topo %.2f pe %.2f direita %.2f esquerda %.2f\n", (janela_altura) / 2),
		(((janela_altura) / 2) * -1),
		((janela_largura) / 2),
		(((janela_largura) / 2) * -1);

	printf("\n step x %.2f step y %.2f\n", xStep, yStep);
	printf("\n tx %.2f ty %.2f\n", tx, ty);*/

	glutPostRedisplay();
	glutTimerFunc(150, anima, 1);
}

void keyboard(unsigned char tecla, int x, int y)
{
	/*printf("\ntecla % c\n", tecla);
	printf("\n\nDigite 1 translacao x, 2 translacao y: ");
	printf("\nteclar %c\n", tecla);
	printf("\no mouse estava em %d x %d y\n", x, y);*/
}

void desenhar()
{
	glLoadIdentity();
	glTranslatef((janela_largura) / 2, (janela_altura) / 2, 0);

	glBegin(GL_TRIANGLES);
	glColor3f(1.0, 0.0, 0.0);
	glVertex2f(-100, -100);
	glVertex2f(0, 0);
	glVertex2f(100, -100);

	glEnd();

	glTranslatef(tx, ty, 0.0f);

	glBegin(GL_QUADS);
	glColor3f(1.0, 1.0, 0.0);
	glVertex2f(-30, 30);
	glVertex2f(-10, 30);
	glVertex2f(-10, 50);
	glVertex2f(-30, 50);

	glEnd();
}

void display()
{
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();

	glClearColor(0.0f, 0.0f, 1.0f, 1.0f);
	glClear(GL_COLOR_BUFFER_BIT);

	glViewport(0, 0, janela_largura, janela_altura);
	desenhar();

	glFlush();
}

void tela(GLsizei w, GLsizei h)
{
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();

	gluOrtho2D(0, janela_largura, 0, janela_altura);

	glMatrixMode(GL_MODELVIEW);
}
