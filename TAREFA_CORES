#include <stdio.h>
#include <stdlib.h>
#include <GL/glut.h>

void keyboard(unsigned char key, int x, int y);
void display(int r, int g, int b);
void color(int tecla, int x, int y);
void mouse(int button, int state, int mousex, int mousey);
int x , y;


int main(int argc, char** argv)
{
	printf("PRESSIONE ALGUMA DAS TECLAS PARA ALTERAR A COR\n\nF1 - VERMELHO F2 - AMARELO F3- AZUL");
	glutInit(&argc, argv);
	glutInitWindowSize(600, 600);
	glutInitWindowPosition(400, 100);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutCreateWindow("MOUSE CORES");

	glClearColor(1, 1, 1, 0);
	glClear(GL_COLOR_BUFFER_BIT);

	// glutDisplayFunc(display(0, 0, 0));
	display(1, 1, 1);
	glutMouseFunc(mouse);
	glutSpecialFunc(color);
	glutMainLoop();
}


void color(int tecla, int x, int y)
{
	switch (tecla){
	case GLUT_KEY_F1:
		
		display(1,0,0);
		break;

	case GLUT_KEY_F2:
		
		display(1,1,0);
		break;

	case GLUT_KEY_F3:
		display(0,0,1);
		break;
	}
}

void mouse(int button, int state, int mousex, int mousey)
{
	if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)
	{
		x = mousex;
		y = 600 - mousey;
	}
	glutPostRedisplay();
}



void keyboard(unsigned char key, int x, int y)
{
	switch (key) {
	case '\x1B':
		exit(EXIT_SUCCESS);
		break;
	}
}

void display(int r, int g , int b)
{

	glPointSize(40);
	glColor3f(r, g, b);
	glClearColor(0.0f, 1.0f, 0.0f, 0.0f);
	glClear(GL_COLOR_BUFFER_BIT);

	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0, 600.0, 0.0, 600.0);
	
	glBegin(GL_POINTS);
	glVertex2i(x, y);
	glEnd();

	glFlush();
}
